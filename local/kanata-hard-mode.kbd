(defsrc
  esc           f1            f2            f3            f4            f5            f6            f7            f8            f9            f10           f11           f12
  grv           1             2             3             4             5             6             7             8             9             0             -             =             bspc
  tab           q             w             e             r             t             y             u             i             o             p             [             ]             \
  caps          a             s             d             f             g             h             j             k             l             ;             '             ret
  lsft          z             x             c             v             b             n             m             ,             .             /             rsft          up
  fn            lctl          lalt          lmet          spc           rmet          ralt          left          down          rght
)
(defvirtualkeys
  v_to_base (layer-switch base)
  v_rmet rmet
  v_ctl lctl
  v_met lmet
)
(defvar
  left_keys (tab q w e r t caps a s d f g lsft z x c v b)
  left_keys_meh_hyp (tab q w e r t caps a s d f g lsft z x b) ;; c v
  left_keys_home_row (tab q w e r t caps g lsft z x b) ;; a s d f c v
  left_keys_sym_nav (tab q r t caps g lsft z x c v b) ;; w e a s d f

  right_keys (y u i o p [ h j k l ; ' n m , . /)
  right_keys_meh_hyp (y u i o p [ h j k l ; ' , . /) ;; n m
  right_keys_home_row (y u i o p [ h ' , . /) ;; j k l ; n m
  right_keys_sym_nav (y u p [ h ' n m , . /) ;; i o j k l ;
)
(defalias
  meh (multi lctl lalt lsft)
  hyp (multi lctl lalt lsft lmet)
  
  ___ XX

  os_sft (one-shot 500 lsft)

  ls_base (layer-switch base)
  ls_acmk (layer-switch ableton_computer_midi_keyboard)
  ls_ctl_tab (layer-switch ctl_tab)
  ls_met_tab (layer-switch met_tab)

  l_num_nav (layer-while-held num_nav)
  l_sym (layer-while-held symbol)
  l_fn_med (layer-while-held fn_media)
  l_rcmd_layer (layer-while-held rcmd)

  esc_rcmd (tap-hold-release-keys 200 200 esc @l_rcmd_layer $left_keys)
  '_rcmd (tap-hold-release-keys 200 200 ' @l_rcmd_layer $right_keys)

  ret_sym (tap-hold-release 200 200 ret @l_sym)

  cw (caps-word 500)
)
(defalias
  p_ctl (on-press press-virtualkey v_ctl)
  r_ctl (on-press release-virtualkey v_ctl)

  to_ctl_tab (multi (macro @p_ctl 10 tab) @ls_ctl_tab)
  from_ctl_tab (multi @r_ctl @ls_base)
  esc_ctl_tab (multi esc @r_ctl @ls_base)

  p_met (on-press press-virtualkey v_met)
  r_met (on-press release-virtualkey v_met)

  to_met_tab (multi (macro @p_met 10 tab) @ls_met_tab)
  from_met_tab (multi @r_met @ls_base)
  ;; this macro needs a longer delay because sometimes alt-tab doesn't register
  ;; the escape before closing the window
  esc_met_tab (multi (macro esc 50 @r_met) @ls_base)
)
(defchords my_chords 40
  (w  ) (tap-hold-release-keys 200 200 (multi w @type) @hyp $left_keys_meh_hyp)
  (  e) (tap-hold-release-keys 200 200 (multi e @type) @meh $left_keys_meh_hyp)
  (w e) @to_ctl_tab
  (i  ) (tap-hold-release-keys 200 200 (multi i @type) @meh $right_keys_meh_hyp)
  (o  ) (tap-hold-release-keys 200 200 (multi o @type) @hyp $right_keys_meh_hyp)
  (i o) @to_met_tab
)
;; TODO not working - maybe next release
;; (defcfg
;;   concurrent-tap-hold yes
;;   chords-v2-min-idle-experimental 100
;; )
;; (defchordsv2-experimental
;;   (q a) S-1 80 all-released ()
;; )
(defalias
  #|
  Base layer letter keys / quick-typing keys trigger base_typing layer which has no tap-hold mods except essential ones.

  Any key aliased with prefix 'ms_' is a key that is commonly typed during prose, and thus should trigger base_typing layer.
  |#

  ;; alias to cancel tap-hold keys if typing rapidly but restore after a short idle period
  type (multi
    (layer-switch base_typing)
    (on-idle 100 tap-vkey v_to_base)
  )

  ms_q (multi q @type)
  ;; ms_w_hyp (tap-hold-release-keys 200 200 (multi w @type) @hyp $left_keys_meh_hyp)
  ;; ms_e_meh (tap-hold-release-keys 200 200 (multi e @type) @meh $left_keys_meh_hyp)
  ms_w_hyp (chord my_chords w)
  ms_e_meh (chord my_chords e)
  ms_r (multi r @type)
  ms_t (multi t @type)
  ms_y (multi y @type)
  ms_u (multi u @type)
  ms_i_meh (chord my_chords i)
  ms_o_hyp (chord my_chords o)
  ms_p (multi p @type)

  ms_a_ctl (tap-hold-release-keys 200 200 (multi a @type) lctl $left_keys_home_row)
  ms_s_alt (tap-hold-release-keys 200 200 (multi s @type) lalt $left_keys_home_row)
  ms_d_met (tap-hold-release-keys 200 200 (multi d @type) lmet $left_keys_home_row)
  ms_f_sft (tap-hold-release-keys 200 200 (multi f @type) lsft $left_keys_home_row)
  ms_g (multi g @type)
  ms_h (multi h @type)
  ms_j_sft (tap-hold-release-keys 200 200 (multi j @type) lsft $right_keys_home_row)
  ms_k_met (tap-hold-release-keys 200 200 (multi k @type) lmet $right_keys_home_row)
  ms_l_alt (tap-hold-release-keys 200 200 (multi l @type) lalt $right_keys_home_row)
  ms_;_ctl (tap-hold-release-keys 200 200 (multi ; @type) lctl $right_keys_home_row)
  ms_'_rcmd (tap-hold-release-keys 200 200 (multi ' @type) @l_rcmd_layer $right_keys)

  ms_z (multi z @type)
  ms_x (multi x @type)
  ms_c_sym (tap-hold-release-keys 200 200 (multi c @type) @l_sym $left_keys_sym_nav)
  ms_v_fn_med (tap-hold-release-keys 200 200 (multi v @type) @l_fn_med $left_keys_sym_nav)
  ms_b (multi b @type)
  ms_n_fn_med (tap-hold-release-keys 200 200 (multi n @type) @l_fn_med $right_keys_sym_nav)
  ms_m_sym (tap-hold-release-keys 200 200 (multi m @type) @l_sym $right_keys_sym_nav)
  ms_, (multi , @type)
  ms_. (multi . @type)

  ;; ms_bspc_fn_med (tap-hold-release 200 200 (multi bspc @type) @l_fn_med)
  ms_spc_num_nav (tap-hold-release 200 200 (multi spc @type) @l_num_nav)
)
(deflayer base
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            @___          @___          @___          XX            XX            XX            @___          @___          @___          XX            XX            XX          
  tab           @ms_q         @ms_w_hyp     @ms_e_meh     @ms_r         @ms_t         @ms_y         @ms_u         @ms_i_meh     @ms_o_hyp     @ms_p         bspc          XX            XX     
  @esc_rcmd     @ms_a_ctl     @ms_s_alt     @ms_d_met     @ms_f_sft     @ms_g         @ms_h         @ms_j_sft     @ms_k_met     @ms_l_alt     @ms_;_ctl     @ms_'_rcmd    XX     
  @os_sft       @ms_z         @ms_x         @ms_c_sym     @ms_v_fn_med  @ms_b         @ms_n_fn_med  @ms_m_sym     @ms_,         @ms_.         /             XX            XX     
  lrld          XX            @___          @___          @ms_spc_num_nav ret         @cw           XX            XX            XX     
)
(defalias
  ;; Layer for quick typing. The only tap-holds defined on this layer should be ones that might be useful while typing quickly.

  ;; shift is more important than other modifiers, so these keys go on typing layer for quick shifting
  f_sft (tap-hold-release-keys 200 200 f lsft $left_keys)
  j_sft (tap-hold-release-keys 200 200 j lsft $right_keys)

  ;; symbol layer needs to be accessible while typing quickly
  c_sym (tap-hold-release-keys 200 200 c @l_sym $left_keys)
  m_sym (tap-hold-release-keys 200 200 m @l_sym $right_keys)

  ;; also allow tap-hold spc on typing layer for quick arrows
  spc_num_nav (tap-hold-release 200 200 spc @l_num_nav)
)
(deflayer base_typing
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            @___          @___          @___          XX            XX            XX            @___          @___          @___          XX            XX            XX          
  tab           q             w             e             r             t             y             u             i             o             p             bspc          XX            XX          
  esc           a             s             d             @f_sft        g             h             @j_sft        k             l             ;             '             XX          
  @os_sft       z             x             @c_sym        v             b             n             @m_sym        ,             .             /             XX            XX          
  @___          XX            @___          @___          @spc_num_nav  ret           @cw           XX            XX            XX          
)
(defalias
  7_hyp (tap-hold-release-keys 200 200 7 @hyp $left_keys_meh_hyp)
  8_meh (tap-hold-release-keys 200 200 8 @meh $left_keys_meh_hyp)

  0_ctl (tap-hold-release-keys 200 200 0 lctl $left_keys_home_row)
  4_alt (tap-hold-release-keys 200 200 4 lalt $left_keys_home_row)
  5_met (tap-hold-release-keys 200 200 5 lmet $left_keys_home_row)
  6_sft (tap-hold-release-keys 200 200 6 lsft $left_keys_home_row)

  down_sft (tap-hold-release-keys 200 200 down lsft $right_keys_home_row)
  up_met (tap-hold-release-keys 200 200 up lmet $right_keys_home_row)
  rght_alt (tap-hold-release-keys 200 200 rght lalt $right_keys_home_row)
)
(deflayer num_nav
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            _             _             _             XX            XX            XX            _             _             _             XX            XX            XX          
  _             _             @7_hyp        @8_meh        9             _             _             _             _             _             _             del           XX            XX
  _             @0_ctl        @4_alt        @5_met        @6_sft        _             left          @down_sft     @up_met       @rght_alt     _             _             XX
  _             1             2             3             _             _             home          pgdn          pgup          end           _             XX            XX
  @ls_acmk      XX            _             0             _             _             _             XX            XX            XX
)
(defalias
  s_7_hyp (tap-hold-release-keys 200 200 (multi lsft 7) @hyp $left_keys_meh_hyp)
  s_8_meh (tap-hold-release-keys 200 200 (multi lsft 8) @meh $left_keys_meh_hyp)

  grv_ctl (tap-hold-release-keys 200 200 grv lctl $left_keys_home_row)
  s_4_alt (tap-hold-release-keys 200 200 (multi lsft 4) lalt $left_keys_home_row)
  s_5_met (tap-hold-release-keys 200 200 (multi lsft 5) lmet $left_keys_home_row)
  s_6_sft (tap-hold-release-keys 200 200 (multi lsft 6) lsft $left_keys_home_row)

  s_9_meh (tap-hold-release-keys 200 200 (multi lsft 9) @meh $right_keys_meh_hyp)
  s_0_hyp (tap-hold-release-keys 200 200 (multi lsft 0) @hyp $right_keys_meh_hyp)

  s_[_sft (tap-hold-release-keys 200 200 (multi lsft [) lsft $right_keys_home_row)
  [_met (tap-hold-release-keys 200 200 [ lmet $right_keys_home_row)
  ]_alt (tap-hold-release-keys 200 200 ] lalt $right_keys_home_row)
  s_]_ctl (tap-hold-release-keys 200 200 (multi lsft ]) lctl $right_keys_home_row)
)
(deflayer symbol
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            _             _             _             XX            XX            XX            _             _             _             XX            XX            XX          
  _             _             @s_7_hyp      @s_8_meh      _             _             _             _             @s_9_meh      @s_0_hyp      _             _             XX            XX
  S-grv         @grv_ctl      @s_4_alt      @s_5_met      @s_6_sft      _             _             @s_[_sft      @[_met        @]_alt        @s_]_ctl      S-\           XX
  _             S-1           S-2           S-3           _             _             S--           -             =             S-=           \             XX            XX
  _             XX            _             _             _             _             _             XX            XX            XX
)
(defalias
  f7_hyp (tap-hold-release-keys 200 200 f7 @hyp $left_keys_meh_hyp)
  f8_meh (tap-hold-release-keys 200 200 f8 @meh $left_keys_meh_hyp)
  
  f4_alt (tap-hold-release-keys 200 200 f4 lalt $left_keys_home_row)
  f5_met (tap-hold-release-keys 200 200 f5 lmet $left_keys_home_row)
  f6_sft (tap-hold-release-keys 200 200 f6 lsft $left_keys_home_row)

  vold_sft (tap-hold-release-keys 200 200 vold lsft $right_keys_home_row)
  volu_met (tap-hold-release-keys 200 200 volu lmet $right_keys_home_row)
  next_alt (tap-hold-release-keys 200 200 next lalt $right_keys_home_row)
)
(deflayer fn_media
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            f10           f11           f12           XX            XX            XX            _             _             _             XX            XX            XX
  _             _             @f7_hyp       @f8_meh       f9            _             _             _             _             _             _             _             XX            XX
  _             _             @f4_alt       @f5_met       @f6_sft       _             prev          @vold_sft     @volu_met     @next_alt     _             _             XX
  _             f1            f2            f3            _             _             mute          brdn          brup          pp            _             XX            XX
  _             XX            _             _             _             _             _             XX            XX            XX
)
(defalias
  #|
  Layer for `rcmd` macos app.

  Using macros + virtual keys here because I couldn't get rcmd to work with a simple tap-hold on base layer.
  |#
  p_rmet (on-press press-virtualkey v_rmet)
  r_rmet (on-release release-virtualkey v_rmet)

  a_rcmd (macro @p_rmet 50 a 50 @r_rmet)
  b_rcmd (macro @p_rmet 50 b 50 @r_rmet)
  c_rcmd (macro @p_rmet 50 c 50 @r_rmet)
  d_rcmd (macro @p_rmet 50 d 50 @r_rmet)
  e_rcmd (macro @p_rmet 50 e 50 @r_rmet)
  f_rcmd (macro @p_rmet 50 f 50 @r_rmet)
  g_rcmd (macro @p_rmet 50 g 50 @r_rmet)
  h_rcmd (macro @p_rmet 50 h 50 @r_rmet)
  i_rcmd (macro @p_rmet 50 i 50 @r_rmet)
  j_rcmd (macro @p_rmet 50 j 50 @r_rmet)
  k_rcmd (macro @p_rmet 50 k 50 @r_rmet)
  l_rcmd (macro @p_rmet 50 l 50 @r_rmet)
  m_rcmd (macro @p_rmet 50 m 50 @r_rmet)
  n_rcmd (macro @p_rmet 50 n 50 @r_rmet)
  o_rcmd (macro @p_rmet 50 o 50 @r_rmet)
  p_rcmd (macro @p_rmet 50 p 50 @r_rmet)
  q_rcmd (macro @p_rmet 50 q 50 @r_rmet)
  r_rcmd (macro @p_rmet 50 r 50 @r_rmet)
  s_rcmd (macro @p_rmet 50 s 50 @r_rmet)
  t_rcmd (macro @p_rmet 50 t 50 @r_rmet)
  u_rcmd (macro @p_rmet 50 u 50 @r_rmet)
  v_rcmd (macro @p_rmet 50 v 50 @r_rmet)
  w_rcmd (macro @p_rmet 50 w 50 @r_rmet)
  x_rcmd (macro @p_rmet 50 x 50 @r_rmet)
  y_rcmd (macro @p_rmet 50 y 50 @r_rmet)
  z_rcmd (macro @p_rmet 50 z 50 @r_rmet)
)
(deflayer rcmd
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             @q_rcmd       @w_rcmd       @e_rcmd       @r_rcmd       @t_rcmd       @y_rcmd       @u_rcmd       @i_rcmd       @o_rcmd       @p_rcmd       _             _             _
  _             @a_rcmd       @s_rcmd       @d_rcmd       @f_rcmd       @g_rcmd       @h_rcmd       @j_rcmd       @k_rcmd       @l_rcmd       _             _             _
  _             @z_rcmd       @x_rcmd       @c_rcmd       @v_rcmd       @b_rcmd       @n_rcmd       @m_rcmd       _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _
)
;; TODO try deflayermap
(deflayer ctl_tab
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX            XX            @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX            XX          
  @from_ctl_tab @from_ctl_tab S-tab         tab           @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX
  @esc_ctl_tab  @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab S-tab         tab           S-tab         tab           @from_ctl_tab @from_ctl_tab XX
  @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX
  @from_ctl_tab XX            @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX            XX
)
;; TODO try deflayermap
(deflayer met_tab
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            @from_met_tab @from_met_tab @from_met_tab XX            XX            XX            @from_met_tab @from_met_tab @from_met_tab XX            XX            XX          
  @from_met_tab q             w             @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab tab           S-tab         @from_met_tab @from_met_tab XX            XX
  @esc_met_tab  @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab h             j             k             l             @from_met_tab @from_met_tab XX
  @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab m             @from_met_tab @from_met_tab @from_met_tab XX            XX
  @from_met_tab XX            @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab XX            XX            XX
)
(deflayer ableton_computer_midi_keyboard
  esc           brdn          brup          C-up          M-spc         C-f5          A-f6          prev          pp            next          mute          vold          volu
  grv           1             2             3             4             5             6             7             8             9             0             -             =             bspc
  tab           q             w             e             r             t             y             u             i             o             p             [             ]             \
  esc           a             s             d             f             g             h             j             k             l             ;             '             ret
  @os_sft       z             x             c             v             b             n             m             ,             .             /             @os_sft       up
  @ls_base      lctl          lalt          lmet          @spc_num_nav  rmet          ralt          left          down          rght
)
(deflayer empty
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _
)
(deflayer empty_hard_mode
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            _             _             _             XX            XX            XX            _             _             _             XX            XX            XX          
  _             _             _             _             _             _             _             _             _             _             _             _             XX            XX
  _             _             _             _             _             _             _             _             _             _             _             _             XX
  _             _             _             _             _             _             _             _             _             _             _             XX            XX
  _             XX            _             _             _             _             _             XX            XX            XX
)
