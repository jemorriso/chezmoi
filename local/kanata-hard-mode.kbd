(defsrc
  esc           f1            f2            f3            f4            f5            f6            f7            f8            f9            f10           f11           f12
  grv           1             2             3             4             5             6             7             8             9             0             -             =             bspc
  tab           q             w             e             r             t             y             u             i             o             p             [             ]             \
  caps          a             s             d             f             g             h             j             k             l             ;             '             ret
  lsft          z             x             c             v             b             n             m             ,             .             /             rsft          up
  fn            lctl          lalt          lmet          spc           rmet          ralt          left          down          rght
)
(defvirtualkeys
  v_to_base (layer-switch base)
  v_rmet rmet
  v_ctl lctl
  v_met lmet
)
(defvar
  left_keys (tab q w e r t caps a s d f g lsft z x c v b)
  left_keys_meh_hyp (tab q w e r t caps a s d f g lsft z x b) ;; c v
  left_keys_home_row (tab q w e r t caps g lsft z x b) ;; a s d f c v
  left_keys_sym_nav (tab q r t caps g lsft z x c v b) ;; w e a s d f

  right_keys (y u i o p [ h j k l ; ' n m , . /)
  right_keys_meh_hyp (y u i o p [ h j k l ; ' , . /) ;; n m
  right_keys_home_row (y u i o p [ h ' , . /) ;; j k l ; n m
  right_keys_sym_nav (y u p [ h ' n m , . /) ;; i o j k l ;

  ;; f and j for shift
  all_keys_except_tab_f_j (q w e r t caps a s d g lsft z x c v b y u i o p [ h k l ; ' n m , . /) ;; tab
)
(defalias
  meh (multi lctl lalt lsft)
  hyp (multi lctl lalt lsft lmet)
  
  ___ XX


  ls_base (layer-switch base)
  ls_smart_num (layer-switch smart_num)
  ls_acmk (layer-switch ableton_computer_midi_keyboard)
  ls_ctl_tab (layer-switch ctl_tab)
  ls_met_tab (layer-switch met_tab)

  l_space (layer-while-held space)
  l_space_os (layer-while-held space_oneshot)
  l_fn_med (layer-while-held fn_media)
  l_rcmd_layer (layer-while-held rcmd)

  esc_rcmd (tap-hold-release-keys 200 200 esc @l_rcmd_layer $left_keys)
  '_rcmd (tap-hold-release-keys 200 200 ' @l_rcmd_layer $right_keys)

  ret_s_spc (tap-hold-release 200 200 ret (multi lsft @l_space))

  cw (caps-word 500)

  os_sft (one-shot 500 lsft)
  os_space_os (one-shot 500 @l_space_os)
  os_fn_med (one-shot 500 @l_fn_med)
  ;; do not use @l_space_os because it will go to smart_num layer
  os_s_space (multi (one-shot 500 lsft) (one-shot 500 @l_space))
)
(defalias
  p_ctl (on-press press-virtualkey v_ctl)
  r_ctl (on-press release-virtualkey v_ctl)

  to_ctl_tab (multi (macro @p_ctl 10 tab) @ls_ctl_tab)
  from_ctl_tab (multi @r_ctl @ls_base)
  esc_ctl_tab (multi esc @r_ctl @ls_base)

  p_met (on-press press-virtualkey v_met)
  r_met (on-press release-virtualkey v_met)

  to_met_tab (multi (macro @p_met 10 tab) @ls_met_tab)
  from_met_tab (multi @r_met @ls_base)
  ;; this macro needs a longer delay because sometimes alt-tab doesn't register
  ;; the escape before closing the window
  esc_met_tab (multi (macro esc 50 @r_met) @ls_base)
)
(defchords my_chords 40
  (w  ) (tap-hold-release-keys 200 200 (multi w @type) @hyp $left_keys_meh_hyp)
  (  e) (tap-hold-release-keys 200 200 (multi e @type) @meh $left_keys_meh_hyp)
  (w e) @to_ctl_tab
  (i  ) (tap-hold-release-keys 200 200 (multi i @type) @meh $right_keys_meh_hyp)
  (o  ) (tap-hold-release-keys 200 200 (multi o @type) @hyp $right_keys_meh_hyp)
  (i o) @to_met_tab
  (k  ) (tap-hold-release-keys 200 200 (multi k @type) lmet $right_keys_home_row)
  (  l) (tap-hold-release-keys 200 200 (multi l @type) lalt $right_keys_home_row)
  (k l) (tap-hold-release-keys 200 200 ret (multi lalt lmet) $right_keys_home_row)
  (e i) -
)
;; TODO not working - maybe next release
;; (defcfg
;;   concurrent-tap-hold yes
;;   chords-v2-min-idle-experimental 100
;; )
;; (defchordsv2-experimental
;;   (q a) S-1 80 all-released ()
;; )
(defalias
  #|
  Base layer letter keys / quick-typing keys trigger base_typing layer which has no tap-hold mods except essential ones.

  Any key aliased with prefix 'ms_' is a key that is commonly typed during prose, and thus should trigger base_typing layer.
  |#

  ;; alias to cancel tap-hold keys if typing rapidly but restore after a short idle period
  type (multi
    (layer-switch base_typing)
    (on-idle 100 tap-vkey v_to_base)
  )

  ms_q (multi q @type)
  ms_w_hyp (chord my_chords w)
  ms_e_meh (chord my_chords e)
  ms_r (multi r @type)
  ms_t (multi t @type)
  ms_y (multi y @type)
  ms_u (multi u @type)
  ms_i_meh (chord my_chords i)
  ms_o_hyp (chord my_chords o)
  ms_p (multi p @type)

  ms_a_ctl (tap-hold-release-keys 200 200 (multi a @type) lctl $left_keys_home_row)
  ms_s_alt (tap-hold-release-keys 200 200 (multi s @type) lalt $left_keys_home_row)
  ms_d_met (tap-hold-release-keys 200 200 (multi d @type) lmet $left_keys_home_row)
  ms_f_sft (tap-hold-release-keys 200 200 (multi f @type) lsft $left_keys_home_row)
  ms_g (multi g @type)
  ms_h (multi h @type)
  ms_j_sft (tap-hold-release-keys 200 200 (multi j @type) lsft $right_keys_home_row)
  ms_k_met (chord my_chords k)
  ms_l_alt (chord my_chords l)
  ms_;_ctl (tap-hold-release-keys 200 200 (multi ; @type) lctl $right_keys_home_row)
  ms_'_rcmd (tap-hold-release-keys 200 200 (multi ' @type) @l_rcmd_layer $right_keys)

  ms_z (multi z @type)
  ms_x_cmd_grv (tap-hold-release-keys 200 200 (multi x @type) (multi lmet @l_space) $all_keys_except_tab_f_j)
  ms_c_cmd_tab (tap-hold-release-keys 200 200 (multi c @type) lmet $all_keys_except_tab_f_j)
  ms_v_fn_med (tap-hold-release-keys 200 200 (multi v @type) @l_fn_med $left_keys_sym_nav)
  ms_b (multi b @type)
  ms_n_fn_med (tap-hold-release-keys 200 200 (multi n @type) @l_fn_med $right_keys_sym_nav)
  ms_m_ctl_tab (tap-hold-release-keys 200 200 (multi m @type) lctl $all_keys_except_tab_f_j)
  ms_, (multi , @type)
  ms_. (multi . @type)

  ms_spc_space (tap-hold-release 200 200 (multi spc @type) @l_space)
)
(deflayer base
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            @___          @___          @___          XX            XX            XX            @___          @___          @___          XX            XX            XX          
  tab           @ms_q         @ms_w_hyp     @ms_e_meh     @ms_r         @ms_t         @ms_y         @ms_u         @ms_i_meh     @ms_o_hyp     @ms_p         bspc          XX            XX     
  @esc_rcmd     @ms_a_ctl     @ms_s_alt     @ms_d_met     @ms_f_sft     @ms_g         @ms_h         @ms_j_sft     @ms_k_met     @ms_l_alt     @ms_;_ctl     @ms_'_rcmd    XX     
  ret           @ms_z         @ms_x_cmd_grv @ms_c_cmd_tab @ms_v_fn_med  @ms_b         @ms_n_fn_med  @ms_m_ctl_tab @ms_,         @ms_.         /             XX            XX     
  lrld          XX            @os_fn_med    @os_space_os  @ms_spc_space @os_sft       @os_s_space   XX            XX            XX     
)
(defalias
  ;; Layer for quick typing. The only tap-holds defined on this layer should be ones that might be useful while typing quickly.

  ;; shift is more important than other modifiers, so these keys go on typing layer for quick shifting
  f_sft (tap-hold-release-keys 200 200 f lsft $left_keys)
  j_sft (tap-hold-release-keys 200 200 j lsft $right_keys)

  ;; also allow tap-hold spc on typing layer for quick arrows
  spc_space (tap-hold-release 200 200 spc @l_space)
)
(deflayer base_typing
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            @___          @___          @___          XX            XX            XX            @___          @___          @___          XX            XX            XX          
  tab           q             w             e             r             t             y             u             i             o             p             bspc          XX            XX          
  esc           a             s             d             @f_sft        g             h             @j_sft        k             l             ;             '             XX          
  ret           z             x             c             v             b             n             m             ,             .             /             XX            XX          
  @___          XX            @os_fn_med    @os_space_os  @spc_space    @os_sft       @os_s_space   XX            XX            XX          
)
(defalias
  7_hyp (tap-hold-release-keys 200 200 7 @hyp $left_keys_meh_hyp)
  8_meh (tap-hold-release-keys 200 200 8 @meh $left_keys_meh_hyp)

  0_ctl (tap-hold-release-keys 200 200 0 lctl $left_keys_home_row)
  4_alt (tap-hold-release-keys 200 200 4 lalt $left_keys_home_row)
  5_met (tap-hold-release-keys 200 200 5 lmet $left_keys_home_row)
  6_sft (tap-hold-release-keys 200 200 6 lsft $left_keys_home_row)

  [_meh (tap-hold-release-keys 200 200 [ @meh $right_keys_meh_hyp)
  ]_hyp (tap-hold-release-keys 200 200 ] @hyp $right_keys_meh_hyp)

  down_sft (tap-hold-release-keys 200 200 down lsft $right_keys_home_row)
  up_met (tap-hold-release-keys 200 200 up lmet $right_keys_home_row)
  rght_alt (tap-hold-release-keys 200 200 rght lalt $right_keys_home_row)
)
(deflayer space
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            home          end           _             XX            XX            XX            _             S-9           S-0           XX            XX            XX          
  grv           S-grv         @7_hyp        @8_meh        9             _             _             S-[           @[_meh        @]_hyp        S-]           del           XX            XX
  pgup          @0_ctl        @4_alt        @5_met        @6_sft        _             left          @down_sft     @up_met       @rght_alt     S-\           _             XX
  pgdn          1             2             3             _             _             S--           -             =             S-=           \             XX            XX
  @ls_acmk      XX            _             _             _             _             _             XX            XX            XX
)
(defalias
  7_hyp_sn (tap-hold-release-keys 200 200 (multi 7 @ls_smart_num) @hyp $left_keys_meh_hyp)
  8_meh_sn (tap-hold-release-keys 200 200 (multi 8 @ls_smart_num) @meh $left_keys_meh_hyp)
  9_sn (multi 9 @ls_smart_num)

  0_ctl_sn (tap-hold-release-keys 200 200 (multi 0 @ls_smart_num) lctl $left_keys_home_row)
  4_alt_sn (tap-hold-release-keys 200 200 (multi 4 @ls_smart_num) lalt $left_keys_home_row)
  5_met_sn (tap-hold-release-keys 200 200 (multi 5 @ls_smart_num) lmet $left_keys_home_row)
  6_sft_sn (tap-hold-release-keys 200 200 (multi 6 @ls_smart_num) lsft $left_keys_home_row)

  1_sn (multi 1 @ls_smart_num)
  2_sn (multi 2 @ls_smart_num)
  3_sn (multi 3 @ls_smart_num)
)
(deflayer space_oneshot
  ;; the only difference is we add smart_num. We do not want this on the space layer because it's used for number+mod shortcuts
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            home          end           _             XX            XX            XX            _             S-9           S-0           XX            XX            XX          
  grv           S-grv         @7_hyp_sn     @8_meh_sn     @9_sn         _             _             S-[           @[_meh        @]_hyp        S-]           del           XX            XX
  pgup          @0_ctl_sn     @4_alt_sn     @5_met_sn     @6_sft_sn     _             left          @down_sft     @up_met       @rght_alt     S-\           _             XX
  pgdn          @1_sn         @2_sn         @3_sn         _             _             S--           -             =             S-=           \             XX            XX
  @ls_acmk      XX            _             _             _             _             _             XX            XX            XX
)
(defalias
  sn_tab (multi @ls_base tab)
  sn_q (multi @ls_base q)
  sn_w (multi @ls_base w)
  sn_e (multi @ls_base e)
  sn_r (multi @ls_base r)
  sn_t (multi @ls_base t)
  sn_y (multi @ls_base y)
  sn_u (multi @ls_base u)
  sn_i (multi @ls_base i)
  sn_o (multi @ls_base o)
  sn_p (multi @ls_base p)

  sn_esc (multi @ls_base esc)
  sn_a (multi @ls_base a)
  sn_s (multi @ls_base s)
  sn_d (multi @ls_base d)
  sn_f (multi @ls_base f)
  sn_g (multi @ls_base g)
  sn_h (multi @ls_base h)
  sn_j (multi @ls_base j)
  sn_k (multi @ls_base k)
  sn_l (multi @ls_base l)
  sn_; (multi @ls_base ;)
  sn_' (multi @ls_base ')

  sn_ret (multi @ls_base ret)
  sn_z (multi @ls_base z)
  sn_x (multi @ls_base x)
  sn_c (multi @ls_base c)
  sn_v (multi @ls_base v)
  sn_b (multi @ls_base b)
  sn_n (multi @ls_base n)
  sn_m (multi @ls_base m)
  sn_, (multi @ls_base ,)
  sn_. (multi @ls_base .)
  sn_/ (multi @ls_base /)
  
  sn_spc (multi @ls_base spc)
)
(deflayer smart_num
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            @___          @___          @___          XX            XX            XX            @___          @___          @___          XX            XX            XX          
  @sn_tab       @sn_q         7             8             9             @sn_t         @sn_y         @sn_u         @sn_i         @sn_o         @sn_p         bspc          XX            XX
  @sn_esc       0             4             5             6             @sn_g         @sn_h         @sn_j         @sn_k         @sn_l         @sn_;         @sn_'         XX
  @sn_ret       1             2             3             @sn_v         @sn_b         @sn_n         @sn_m         @sn_,         @sn_.         @sn_/         XX            XX
  _             XX            _             _             @sn_spc       @ls_base      _             XX            XX            XX
)
(defalias
  f7_hyp (tap-hold-release-keys 200 200 f7 @hyp $left_keys_meh_hyp)
  f8_meh (tap-hold-release-keys 200 200 f8 @meh $left_keys_meh_hyp)
  
  f4_alt (tap-hold-release-keys 200 200 f4 lalt $left_keys_home_row)
  f5_met (tap-hold-release-keys 200 200 f5 lmet $left_keys_home_row)
  f6_sft (tap-hold-release-keys 200 200 f6 lsft $left_keys_home_row)

  vold_sft (tap-hold-release-keys 200 200 vold lsft $right_keys_home_row)
  volu_met (tap-hold-release-keys 200 200 volu lmet $right_keys_home_row)
  next_alt (tap-hold-release-keys 200 200 next lalt $right_keys_home_row)
)
(deflayer fn_media
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            f10           f11           f12           XX            XX            XX            _             _             _             XX            XX            XX
  _             _             @f7_hyp       @f8_meh       f9            _             _             _             _             _             _             _             XX            XX
  _             _             @f4_alt       @f5_met       @f6_sft       _             prev          @vold_sft     @volu_met     @next_alt     _             _             XX
  _             f1            f2            f3            _             _             mute          brdn          brup          pp            _             XX            XX
  _             XX            _             _             _             _             _             XX            XX            XX
)
(defalias
  #|
  Layer for `rcmd` macos app.

  Using macros + virtual keys here because I couldn't get rcmd to work with a simple tap-hold on base layer.
  |#
  p_rmet (on-press press-virtualkey v_rmet)
  r_rmet (on-release release-virtualkey v_rmet)

  a_rcmd (macro @p_rmet 50 a 50 @r_rmet)
  b_rcmd (macro @p_rmet 50 b 50 @r_rmet)
  c_rcmd (macro @p_rmet 50 c 50 @r_rmet)
  d_rcmd (macro @p_rmet 50 d 50 @r_rmet)
  e_rcmd (macro @p_rmet 50 e 50 @r_rmet)
  f_rcmd (macro @p_rmet 50 f 50 @r_rmet)
  g_rcmd (macro @p_rmet 50 g 50 @r_rmet)
  h_rcmd (macro @p_rmet 50 h 50 @r_rmet)
  i_rcmd (macro @p_rmet 50 i 50 @r_rmet)
  j_rcmd (macro @p_rmet 50 j 50 @r_rmet)
  k_rcmd (macro @p_rmet 50 k 50 @r_rmet)
  l_rcmd (macro @p_rmet 50 l 50 @r_rmet)
  m_rcmd (macro @p_rmet 50 m 50 @r_rmet)
  n_rcmd (macro @p_rmet 50 n 50 @r_rmet)
  o_rcmd (macro @p_rmet 50 o 50 @r_rmet)
  p_rcmd (macro @p_rmet 50 p 50 @r_rmet)
  q_rcmd (macro @p_rmet 50 q 50 @r_rmet)
  r_rcmd (macro @p_rmet 50 r 50 @r_rmet)
  s_rcmd (macro @p_rmet 50 s 50 @r_rmet)
  t_rcmd (macro @p_rmet 50 t 50 @r_rmet)
  u_rcmd (macro @p_rmet 50 u 50 @r_rmet)
  v_rcmd (macro @p_rmet 50 v 50 @r_rmet)
  w_rcmd (macro @p_rmet 50 w 50 @r_rmet)
  x_rcmd (macro @p_rmet 50 x 50 @r_rmet)
  y_rcmd (macro @p_rmet 50 y 50 @r_rmet)
  z_rcmd (macro @p_rmet 50 z 50 @r_rmet)
)
(deflayer rcmd
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             @q_rcmd       @w_rcmd       @e_rcmd       @r_rcmd       @t_rcmd       @y_rcmd       @u_rcmd       @i_rcmd       @o_rcmd       @p_rcmd       _             _             _
  _             @a_rcmd       @s_rcmd       @d_rcmd       @f_rcmd       @g_rcmd       @h_rcmd       @j_rcmd       @k_rcmd       @l_rcmd       _             _             _
  _             @z_rcmd       @x_rcmd       @c_rcmd       @v_rcmd       @b_rcmd       @n_rcmd       @m_rcmd       _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _
)
;; TODO try deflayermap
(deflayer ctl_tab
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX            XX            @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX            XX          
  @from_ctl_tab @from_ctl_tab S-tab         tab           @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX
  @esc_ctl_tab  @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab S-tab         tab           S-tab         tab           @from_ctl_tab @from_ctl_tab XX
  @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX
  @from_ctl_tab XX            @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab @from_ctl_tab XX            XX            XX
)
;; TODO try deflayermap
(deflayer met_tab
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            @from_met_tab @from_met_tab @from_met_tab XX            XX            XX            @from_met_tab @from_met_tab @from_met_tab XX            XX            XX          
  @from_met_tab q             w             @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab tab           S-tab         @from_met_tab @from_met_tab XX            XX
  @esc_met_tab  @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab h             j             k             l             @from_met_tab @from_met_tab XX
  @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab m             @from_met_tab @from_met_tab @from_met_tab XX            XX
  @from_met_tab XX            @from_met_tab @from_met_tab @from_met_tab @from_met_tab @from_met_tab XX            XX            XX
)
(deflayer ableton_computer_midi_keyboard
  esc           brdn          brup          C-up          M-spc         C-f5          A-f6          prev          pp            next          mute          vold          volu
  grv           1             2             3             4             5             6             7             8             9             0             -             =             bspc
  tab           q             w             e             r             t             y             u             i             o             p             [             ]             \
  esc           a             s             d             f             g             h             j             k             l             ;             '             ret
  @os_sft       z             x             c             v             b             n             m             ,             .             /             @os_sft       up
  @ls_base      lctl          lalt          lmet          @spc_space    rmet          ralt          left          down          rght
)
(deflayer empty
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _
)
(deflayer empty_hard_mode
  XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX            XX          
  XX            XX            _             _             _             XX            XX            XX            _             _             _             XX            XX            XX          
  _             _             _             _             _             _             _             _             _             _             _             _             XX            XX
  _             _             _             _             _             _             _             _             _             _             _             _             XX
  _             _             _             _             _             _             _             _             _             _             _             XX            XX
  _             XX            _             _             _             _             _             XX            XX            XX
)