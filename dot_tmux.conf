set -g mouse on
set -g escape-time 200

set -g renumber-windows on
set -g base-index 1

set -g set-titles on

set -g status-keys vi
set -gw mode-keys vi

set -g history-limit 10000

set -g prefix C-Space
# hit it twice to send C-space to the terminal
bind C-Space send-prefix

set -g default-terminal "tmux-256color"
set -sa terminal-features "*:RGB" # true color support

# :checkhealth in neovim suggests below
set -g focus-events on

bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'pbcopy'
bind -T copy-mode-vi v send -X begin-selection

bind -T copy-mode-vi 'M-h' select-pane -L
bind -T copy-mode-vi 'M-j' select-pane -D
bind -T copy-mode-vi 'M-k' select-pane -U
bind -T copy-mode-vi 'M-l' select-pane -R
# bind -T copy-mode-vi 'C-\' select-pane -l

# bind -n means skip prefix
bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9
bind -n M-0 select-window -t :0

bind -n M-t new-window

bind -n M-i previous-window
bind -n M-o next-window

bind -n M-z resize-pane -Z

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" 'send M-h' 'select-pane -L'
bind -n M-j if-shell "$is_vim" 'send M-j' 'select-pane -D'
bind -n M-k if-shell "$is_vim" 'send M-k' 'select-pane -U'
bind -n M-l if-shell "$is_vim" 'send M-l' 'select-pane -R'

bind -n M-x kill-pane
bind -n M-w kill-window
bind -n M-q kill-session

bind -n M-I switch-client -p
bind -n M-O switch-client -n

bind -n M-R source-file ~/.tmux.conf

# swap panes
# bind -n M-H run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
# bind -n M-J run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
# bind -n M-K run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
# bind -n M-L run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'

bind -n M-< swap-window -t -1
bind -n M-> swap-window -t +1

bind -n M-| split-window -h
bind -n M-- split-window -v

bind -n M-[ previous-layout
bind -n M-] next-layout

# bind -n M-C-h if-shell "$is_vim" 'send M-C-h' 'resize-pane -L 3'
# bind -n M-C-j if-shell "$is_vim" 'send M-C-j' 'resize-pane -D 3'
# bind -n M-C-k if-shell "$is_vim" 'send M-C-k' 'resize-pane -U 3'
# bind -n M-C-l if-shell "$is_vim" 'send M-C-l' 'resize-pane -R 3'

# bind -r means key can be repeated without prefix
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set -g @easy-motion-prefix "Space"
set -g @easy-motion-default-motion "bd-w"

set -g @catppuccin_flavour 'macchiato'

set -g @continuum-restore 'on'

# not sure if this is necessary
# set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'IngoMeyer441/tmux-easy-motion'

run '~/.tmux/plugins/tpm/tpm'
